<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tutorials on</title><link>https://coraza.io/docs/tutorials/</link><description>Recent content in Tutorials on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://coraza.io/docs/tutorials/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>https://coraza.io/docs/tutorials/introduction/</link><pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate><guid>https://coraza.io/docs/tutorials/introduction/</guid><description>&lt;h1>
&lt;img src="https://coraza.io/images/logo_shield_only.png" align="left" height="46px" alt=""/>&amp;nbsp;
&lt;span>Coraza - Web Application Firewall&lt;/span>
&lt;/h1>
&lt;p>&lt;a href="https://github.com/corazawaf/coraza/actions/workflows/regression.yml">&lt;img src="https://github.com/corazawaf/coraza/actions/workflows/regression.yml/badge.svg" alt="Regression Tests">&lt;/a>
&lt;a href="#">&lt;img src="https://img.shields.io/badge/Coreruleset%20Compatibility-100%25-brightgreen" alt="Coreruleset Compatibility">&lt;/a>
&lt;a href="https://github.com/corazawaf/coraza/actions/workflows/codeql-analysis.yml">&lt;img src="https://github.com/corazawaf/coraza/actions/workflows/codeql-analysis.yml/badge.svg" alt="CodeQL">&lt;/a>
&lt;a href="https://codecov.io/gh/corazawaf/coraza">&lt;img src="https://codecov.io/gh/corazawaf/coraza/branch/v3/dev/graph/badge.svg?token=6570804ZC7" alt="codecov">&lt;/a>
&lt;a href="https://www.repostatus.org/#active">&lt;img src="https://www.repostatus.org/badges/latest/active.svg" alt="Project Status: Active â€“ The project has reached a stable, usable state and is being actively developed.">&lt;/a>
&lt;a href="https://owasp.org/www-project-coraza-web-application-firewall">&lt;img src="https://img.shields.io/badge/owasp-lab%20project-brightgreen" alt="OWASP Lab Project">&lt;/a>
&lt;a href="https://godoc.org/github.com/corazawaf/coraza/v3">&lt;img src="https://godoc.org/github.com/corazawaf/coraza?status.svg" alt="GoDoc">&lt;/a>&lt;/p>
&lt;p>Coraza is an open source, enterprise-grade, high performance Web Application Firewall (WAF) ready to protect your beloved applications. It written in Go, supports ModSecurity SecLang rulesets and is 100% compatible with the OWASP Core Rule Set.&lt;/p>
&lt;ul>
&lt;li>Website: https://coraza.io&lt;/li>
&lt;li>Forum: &lt;a href="https://github.com/corazawaf/coraza/discussions">Github Discussions&lt;/a>&lt;/li>
&lt;li>OWASP Slack Community (#coraza): https://owasp.org/slack/invite&lt;/li>
&lt;li>Rule testing: &lt;a href="https://playground.coraza.io">Coraza Playground&lt;/a>&lt;/li>
&lt;/ul>
&lt;br/>
&lt;p>Key Features:&lt;/p></description></item><item><title>Quick Start</title><link>https://coraza.io/docs/tutorials/quick-start/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://coraza.io/docs/tutorials/quick-start/</guid><description>&lt;p>If you are not looking to use Coraza WAF as a library and you want a working WAF implementation or integration, check the integrations page.&lt;/p>
&lt;!-- @TODO: Update links for integration page -->
&lt;h2 id="requirements">Requirements &lt;a href="#requirements" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;ul>
&lt;li>Golang 1.18+&lt;/li>
&lt;/ul>
&lt;h2 id="add-coraza-to-your-go-project">Add Coraza to your go project &lt;a href="#add-coraza-to-your-go-project" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;pre>&lt;code class="language-sh">go install github.com/corazawaf/coraza/v3@latest
&lt;/code>&lt;/pre>
&lt;h3 id="create-a-waf-instance">Create a WAF instance &lt;a href="#create-a-waf-instance" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;p>WAF instances are the main container for settings and rules which are inherited by transactions that will process requests, responses and logging. A WAF instance can be created like this:&lt;/p></description></item><item><title>OWASP Core Ruleset</title><link>https://coraza.io/docs/tutorials/coreruleset/</link><pubDate>Tue, 13 Oct 2020 15:21:01 +0200</pubDate><guid>https://coraza.io/docs/tutorials/coreruleset/</guid><description>&lt;h2 id="installation">Installation &lt;a href="#installation" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;p>Core Ruleset can be installed by importing each required file in the following order:&lt;/p>
&lt;pre>&lt;code class="language-sh">wget https://raw.githubusercontent.com/corazawaf/coraza/v3/dev/coraza.conf-recommended -O coraza.conf
git clone https://github.com/coreruleset/coreruleset
&lt;/code>&lt;/pre>
&lt;ol>
&lt;li>coraza.conf&lt;/li>
&lt;li>coreruleset/crs-setup.conf.example&lt;/li>
&lt;li>coreruleset/rules/*.conf&lt;/li>
&lt;/ol>
&lt;p>For example:&lt;/p>
&lt;pre>&lt;code class="language-go">func initCoraza(){
cfg := coraza.NewWAFConfig()
.WithDirectivesFromFile(&amp;quot;coraza.conf&amp;quot;)
.WithDirectivesFromFile(&amp;quot;coreruleset/crs-setup.conf.example&amp;quot;)
.WithDirectivesFromFile(&amp;quot;coreruleset/rules/*.conf&amp;quot;)
waf, err := coraza.NewWAF(cfg)
if err != nil {
panic(err)
}
}
&lt;/code>&lt;/pre>
&lt;h2 id="configuration">Configuration &lt;a href="#configuration" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h2>
&lt;p>Please check &lt;a href="https://coreruleset.org/docs/deployment/install/">https://coreruleset.org/docs/deployment/install/&lt;/a> for configuration examples.&lt;/p></description></item><item><title>Using Plugins</title><link>https://coraza.io/docs/tutorials/using-plugins/</link><pubDate>Sun, 05 Sep 2021 14:03:58 -0300</pubDate><guid>https://coraza.io/docs/tutorials/using-plugins/</guid><description>&lt;p>Plugins are imported by calling the respective helpers:&lt;/p>
&lt;ul>
&lt;li>&lt;code>plugins.RegisterOperator(...)&lt;/code>&lt;/li>
&lt;li>&lt;code>plugins.RegisterAction(...)&lt;/code>&lt;/li>
&lt;li>&lt;code>plugins.RegisterBodyProcessor(...)&lt;/code>&lt;/li>
&lt;li>&lt;code>plugins.RegisterTransformation(...)&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Most plugins will register themselves automatically, but some will require you to call the respective helper.&lt;/p>
&lt;p>Self-registering plugins will use init() to call the respective registration helper, and they can be imported like this:&lt;/p>
&lt;pre>&lt;code class="language-go">package main
include(
&amp;quot;github.com/corazawaf/coraza/v3&amp;quot;
_ &amp;quot;github.com/someorg/my-awesome-plugin
)
&lt;/code>&lt;/pre></description></item><item><title>Upgrade to v3 ðŸ†•</title><link>https://coraza.io/docs/tutorials/upgrade/</link><pubDate>Mon, 16 Nov 2020 13:59:39 +0100</pubDate><guid>https://coraza.io/docs/tutorials/upgrade/</guid><description>&lt;p>In this guide, we will outline the necessary steps to upgrade from Coraza v2 to v3. Coraza v3 brings improvements in performance, usability, and extensibility, making it an essential update for users of the library. Follow these steps to ensure a smooth transition.&lt;/p>
&lt;h3 id="1-update-your-dependencies">1. Update your dependencies &lt;a href="#1-update-your-dependencies" class="anchor" aria-hidden="true">#&lt;/a>&lt;/h3>
&lt;p>First, update your project&amp;rsquo;s dependencies to use Coraza v3:&lt;/p>
&lt;pre>&lt;code class="language-sh">go install -u github.com/corazawaf/coraza/v3
&lt;/code>&lt;/pre>
&lt;p>Make sure to replace any import statements in your project with the new import path:&lt;/p></description></item></channel></rss>